<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunlands.deskmate.mapper.TzChatRecordMapper">
  <resultMap id="BaseResultMap" type="com.sunlands.deskmate.entity.TzChatRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_user_id" jdbcType="INTEGER" property="fromUserId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="extras" jdbcType="VARCHAR" property="extras" />
    <result column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="content_id" jdbcType="INTEGER" property="contentId" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, from_user_id, type, message, create_time, extras, to_id, content_id, content_type
  </sql>
  <select id="selectByExample" parameterType="com.sunlands.deskmate.entity.TzChatRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tz_chat_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tz_chat_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sunlands.deskmate.entity.TzChatRecordExample">
    delete from tz_chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sunlands.deskmate.entity.TzChatRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tz_chat_record (from_user_id, type, message, 
      create_time, extras, to_id, 
      content_id, content_type)
    values (#{fromUserId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{extras,jdbcType=VARCHAR}, #{toId,jdbcType=INTEGER}, 
      #{contentId,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sunlands.deskmate.entity.TzChatRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tz_chat_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="extras != null">
        extras,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extras != null">
        #{extras,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sunlands.deskmate.entity.TzChatRecordExample" resultType="java.lang.Long">
    select count(*) from tz_chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tz_chat_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromUserId != null">
        from_user_id = #{record.fromUserId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extras != null">
        extras = #{record.extras,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null">
        to_id = #{record.toId,jdbcType=INTEGER},
      </if>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=INTEGER},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tz_chat_record
    set id = #{record.id,jdbcType=BIGINT},
      from_user_id = #{record.fromUserId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      extras = #{record.extras,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=INTEGER},
      content_id = #{record.contentId,jdbcType=INTEGER},
      content_type = #{record.contentType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sunlands.deskmate.entity.TzChatRecord">
    update tz_chat_record
    <set>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extras != null">
        extras = #{extras,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sunlands.deskmate.entity.TzChatRecord">
    update tz_chat_record
    set from_user_id = #{fromUserId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      extras = #{extras,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=INTEGER},
      content_id = #{contentId,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectPrivateChatRecord" parameterType="com.sunlands.deskmate.dto.RequestDTO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tz_chat_record
    where
    (from_user_id = #{userId} and to_id = #{destId} and type = #{type}) and id > #{maxReadId}
    or
    (from_user_id = #{destId} and to_id = #{userId} and type = #{type}) and id > #{maxReadId}

    order by create_time desc
  </select>
</mapper>